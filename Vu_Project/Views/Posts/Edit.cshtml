@*@model Vu_Project.Models.Post*@

@model Vu_Project.Models.PostViewModel.EditPostVM

@{
    ViewBag.Title = "Edit";
    //string imgUrl = "/Images/dummy.png";
    string URLimg = !string.IsNullOrEmpty(Model.ImgUrl)? Model.ImgUrl : "/Images/dummy.png";
}

@if (Model != null)
{
    <div class="container">
        <div class="row" style="margin-top:22px;">
            <h2 class="text-center text-primary">Edit-Post</h2>
            @using (Html.BeginForm("Edit", "Posts", FormMethod.Post, new { id = "PostForm", enctype = "multipart/form-data" }))
            {
                <div class="col-md-7">

                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.Id)
                        <div class="form-group">
                            @Html.LabelFor(model => model.Category_Id, "Category_Id", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("Category_Id", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Category_Id, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.WebUrl, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.WebUrl, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.WebUrl, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                                @*@Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })*@
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-2">Image</label>
                            <div class="col-md-10">
                                <input type="file" id="file1" name="photo" value="@Model.ImgUrl" class="form-control" />
                            </div>
                        </div>



                    </div>


                </div>

                <div class="col-md-4">
                    <img src="@URLimg" class="img-responsive img-thumbnail" />
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            }
        </div>
    </div>
}
else
{
    <div class="text-danger">Oops! Model is an Empty</div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
